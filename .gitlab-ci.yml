variables:
  GUIX_VERSION: 1.1.0

.before_script_default: &before_script_default
  # Extract the APT cached packages, to void download those each time
  - |
      if test -f apt-cache.tar.gz; then
        mv apt-cache.tar.gz /apt-cache.tar.gz
        cd / && tar xf apt-cache.tar.gz
        cd $CI_PROJECT_DIR
       fi
  - apt-get update -qq && apt-get install -y -qq wget gpg xz-utils ntp

.after_script_default: &after_script_default
  - tar cf apt-cache.tar.gz /var/cache/apt

.before_script_node: &before_script_node
  - wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash
  - export NVM_DIR="$HOME/.nvm"
  - . "$NVM_DIR/nvm.sh"
  - touch $HOME/.npmrc
  # Allow npm scripts as root
  - echo "unsafe-perm=true" > $HOME/.npmrc

.before_script_guile: &before_script_guile
  - |
      if test -f guix-cache.tar.gz; then
        mv guix-cache.tar.gz / && cd /
        tar xf guix-cache.tar.gz
      else
        wget https://sv.gnu.org/people/viewgpg.php?user_id=15145 -qO - | gpg --import -
        wget -O guix-binary.x86_64-linux.tar.xz https://ftp.gnu.org/gnu/guix/guix-binary-$GUIX_VERSION.x86_64-linux.tar.xz
        mv guix-binary.x86_64-linux.tar.xz / && cd /
        tar --warning=no-timestamp -xf guix-binary.x86_64-linux.tar.xz
        mkdir -p $HOME/.config/guix
        ln -sf /var/guix/profiles/per-user/root/current-guix /root/.config/guix/current
      fi
  - groupadd --system guixbuild
  - for i in $(seq 1 10) ; do useradd -g guixbuild -G guixbuild -d /var/empty -s $(which nologin) -c "Guix build user $i" --system guixbuilder$i ; done
  - cd $CI_PROJECT_DIR
  - export GUIX_PROFILE="$HOME/.config/guix/current"
  - source $GUIX_PROFILE/etc/profile
  - ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix /usr/local/bin/guix
  - guix archive --authorize < $GUIX_PROFILE/share/guix/ci.guix.gnu.org.pub
  - guix-daemon --build-users-group=guixbuild --disable-chroot &
  - guix pull
  - guix package -u guix guile

.after_script_guile: &after_script_guile
  #- cp $(guix pack -C gzip guile -S /opt/bin=bin) guix-cache.tar.xz
  - tar cf guix-cache.tar.gz /root/.guix-profile /root/.config/guix /var/guix /gnu

.job_node_definition: &job_node_definition
  before_script:
    - *before_script_default
    - *before_script_node

.job_guile_definition: &job_guile_definition
  before_script:
    - *before_script_default
    - *before_script_guile

  after_script:
    - *after_script_default
    - *after_script_guile

default:
  before_script:
    - *before_script_default
  after_script:
    - *after_script_default

  cache:
    key:
      files:
        - guix.scm
        - package.json
      prefix: ${GUIX_VERSION}
    paths:
      - guix-cache.tar.gz
      - apt-cache.tar.gz

stages:
- test
- update

test_node10:
  <<: *job_node_definition
  stage: test
  except:
    - schedules
  script:
    - echo $(pwd)
    - nvm install 10
    - npm install

test_node12:
  <<: *job_node_definition
  stage: test
  except:
    - schedules
  script:
    - nvm install 12
    - npm install

test_node14:
  <<: *job_node_definition
  stage: test
  except:
    - schedules
  script:
    - nvm install 14
    - npm install

test_guile3:
  <<: *job_guile_definition
  stage: test
  except:
    - schedules
  script:
    - guix install guile@3

update_dependencies:
  allow_failure: true
  stage: update
  only:
    - schedules
  cache:
    paths:
    - ${HOME}/.npm
    - ${HOME}/.nvm
  script:
    - nvm install 14
    - npm install -g renovate@latest
    - renovate --platform gitlab --endpoint https://framagit.org/api/v4 --token ${GITLAB_AUTH_TOKEN} --labels=renovate,dependency compa/compa
